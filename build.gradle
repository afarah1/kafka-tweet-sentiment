/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // Scans src/main/avro for schemes and autogenerates Java classes from them
    id 'com.github.davidmc24.gradle.plugin.avro' version '1.3.0'
    // Versions < 1.0 are no longer supported and do not work with our Gradle 
    // See https://github.com/davidmc24/gradle-avro-plugin/issues/158
    // id 'com.commercehub.gradle.plugin.avro' version '0.9.1'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

avro {
  fieldVisibility = 'PRIVATE'
}

dependencies {
    implementation 'org.apache.kafka:kafka-streams:2.7.0'

    // required for JSON serializer
    implementation 'com.google.code.gson:gson:2.8.5'

    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1-jre'

    // Logging
    implementation 'org.slf4j:slf4j-simple:1.6.1'

    // Required for registryless Avro
    // We need Avro >= 1.11.0, see https://github.com/davidmc24/gradle-avro-plugin
    implementation 'org.apache.avro:avro:1.11.0'

    // required for sentiment analysis
    implementation 'com.google.cloud:google-cloud-language:1.67.0'
}

application {
    // Define the main class for the application.
    mainClass = 'kafkatweets.dsl.App'
}

task runDSL(type: JavaExec) {
    main = 'kafkatweets.dsl.App'
    classpath sourceSets.main.runtimeClasspath
}
